@model PaginationResultResponseVM<List<MenstrualCycleReminderDuyVK>>
@using System.Security.Claims

@{
    ViewData["Title"] = "Reminders Index";
    var currentTitle = Context.Request.Query["title"];
    var currentColor = Context.Request.Query["colorCode"];
    var currentScore = Context.Request.Query["importantScore"];
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Gender.MVCWebApp.FE.DuyVK</title>

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

    <style>
        /* gradient page header */
        .page-header {
            background: linear-gradient(90deg, #6B73FF 0%, #000DFF 100%);
            color: #fff;
            padding: 1rem 1.5rem;
            border-radius: .5rem;
            margin-bottom: 1.5rem;
        }
        /* wrap cards */
        .card-search, .card-table {
            border-radius: .5rem;
            box-shadow: 0 .25rem .5rem rgba(0, 0, 0, .1);
        }
        /* badge for color code */
        .badge-color {
            display: inline-block;
            width: 1rem;
            height: 1rem;
            border-radius: .25rem;
            vertical-align: middle;
            margin-right: .25rem;
            border: 1px solid #ddd;
        }
        /* table styling */
        .table-wrapper {
            overflow-x: auto;
        }

        .table-hover tbody tr:hover {
            background-color: #f1f1f1;
        }
        /* pagination */
        .pagination .page-item.active .page-link {
            background-color: #000DFF;
            border-color: #000DFF;
        }
    </style>
</head>
<body>
    <div class="container py-4">

        <div class="page-header">
            <h1 class="h3 mb-0">Menstrual Cycle Reminders</h1>
        </div>

        <div class="mb-4 d-flex justify-content-end">
            <a asp-action="Create" class="btn btn-primary">
                <i class="bi bi-plus-lg"></i> Create New
            </a>
        </div>

        <div class="card mb-4 card-search">
            <div class="card-body">
                <form method="get" asp-action="Search" class="row g-3 align-items-end">
                    <div class="col-md-3">
                        <label class="form-label">Title</label>
                        <input type="text" name="title" value="@currentTitle" class="form-control" placeholder="Search by Title" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Color Code</label>
                        <input type="text" name="colorCode" value="@currentColor" class="form-control" placeholder="e.g. #FF5733" />
                    </div>
                    <div class="col-md-3">
                        <label class="form-label">Importance Score</label>
                        <input type="number" step="0.01" name="importantScore" value="@currentScore" class="form-control" placeholder="e.g. 0.75" />
                    </div>
                    <div class="col-md-3 text-end">
                        <button type="submit" class="btn btn-outline-primary me-2">
                            <i class="bi bi-search"></i> Search
                        </button>
                        <a asp-action="Search" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-counterclockwise"></i> Reset
                        </a>
                    </div>
                </form>
            </div>
        </div>

        <div class="card card-table">
            <div class="table-wrapper">
                <table class="table table-striped table-hover mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>@Html.DisplayNameFor(m => m.Items[0].Title)</th>
                            <th>@Html.DisplayNameFor(m => m.Items[0].Note)</th>
                            <th>@Html.DisplayNameFor(m => m.Items[0].ReminderDate)</th>
                            <th>@Html.DisplayNameFor(m => m.Items[0].SentAt)</th>
                            <th>@Html.DisplayNameFor(m => m.Items[0].IsSent)</th>
                            <th>@Html.DisplayNameFor(m => m.Items[0].RepeatInterval)</th>
                            <th>@Html.DisplayNameFor(m => m.Items[0].ImportanceScore)</th>
                            <th>@Html.DisplayNameFor(m => m.Items[0].CreatedAt)</th>
                            <th>@Html.DisplayNameFor(m => m.Items[0].UpdatedAt)</th>
                            <th>Category Color</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>@item.Title</td>
                                <td>@item.Note</td>
                                <td>@item.ReminderDate:yyyy-MM-dd HH:mm</td>
                                <td>@(item.SentAt.HasValue? item.SentAt.Value.ToString("yyyy-MM-dd HH:mm") : "-")</td>
                                <td>@(item.IsSent == true ? "Yes" : "No")</td>
                                <td>@item.RepeatInterval</td>
                                <td>@item.ImportanceScore</td>
                                <td>@item.CreatedAt:yyyy-MM-dd HH:mm</td>
                                <td>@item.UpdatedAt:yyyy-MM-dd HH:mm</td>
                                <td>
                                    @if (item.ReminderCategoryDuyVK?.ColorCode != null)
                                    {
                                        <span class="badge-color" style="background-color: @item.ReminderCategoryDuyVK.ColorCode"></span>
                                        @item.ReminderCategoryDuyVK.ColorCode
                                    }
                                </td>
                                <td>
                                    <a asp-action="Edit" asp-route-id="@item.MenstrualCycleReminderDuyVKid" class="btn btn-sm btn-warning">
                                        <i class="bi bi-pencil">Edit</i>
                                    </a>

                                    <a asp-action="Details" asp-route-id="@item.MenstrualCycleReminderDuyVKid" class="btn btn-sm btn-warning">
                                        <i class="bi bi-eye">Detail</i>
                                    </a>

                                    @if (User.FindFirstValue(ClaimTypes.Role) == "1")
                                    {
                                        <a asp-action="Delete" asp-route-id="@item.MenstrualCycleReminderDuyVKid" class="btn btn-sm btn-danger">
                                            <i class="bi bi-trash">Delete</i>
                                        </a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            @if (Model.TotalPages > 1)
            {
                <div class="card-footer d-flex justify-content-center">
                    <nav aria-label="Page navigation">
                        <ul class="pagination mb-0">
                            @if (Model.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link"
                                       asp-action="Search"
                                       asp-route-currentPage="@(Model.CurrentPage - 1)"
                                       asp-route-pageSize="@Model.PageSize"
                                       asp-route-title="@currentTitle"
                                       asp-route-colorCode="@currentColor"
                                       asp-route-importantScore="@currentScore">Previous</a>
                                </li>
                            }
                            @for (int i = 1; i <= Model.TotalPages; i++)
                            {
                                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                    <a class="page-link"
                                       asp-action="Search"
                                       asp-route-currentPage="@i"
                                       asp-route-pageSize="@Model.PageSize"
                                       asp-route-title="@currentTitle"
                                       asp-route-colorCode="@currentColor"
                                       asp-route-importantScore="@currentScore">@i</a>
                                </li>
                            }
                            @if (Model.CurrentPage < Model.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link"
                                       asp-action="Search"
                                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                                       asp-route-pageSize="@Model.PageSize"
                                       asp-route-title="@currentTitle"
                                       asp-route-colorCode="@currentColor"
                                       asp-route-importantScore="@currentScore">Next</a>
                                </li>
                            }
                        </ul>
                    </nav>
                </div>
            }
        </div>

    </div>

    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
