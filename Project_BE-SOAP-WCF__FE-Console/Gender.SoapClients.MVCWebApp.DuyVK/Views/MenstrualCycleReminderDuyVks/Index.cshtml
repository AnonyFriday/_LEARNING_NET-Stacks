@model MenstrualCycleReminderDuyVKServiceReference.PaginationResultResponseOfArrayOfMenstrualCycleReminderDuyVK

@{
    ViewData["Title"] = "Reminders Index";
    var currentTitle = Context.Request.Query["title"];
    var currentColor = Context.Request.Query["colorCode"];
    var currentScore = Context.Request.Query["importanceScore"];
}

<h1 class="mb-4">Menstrual Cycle Reminders</h1>

@* Create *@
<div class="mb-3">
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</div>

@* Search *@
<form method="get" asp-action="Search" class="mb-4">
    <div class="form-row">
        <div class="col-md-3">
            <input type="text" name="title" value="@currentTitle" class="form-control" placeholder="Search by Title" />
        </div>
        <div class="col-md-3">
            <input type="text" name="colorCode" value="@currentColor" class="form-control" placeholder="Search by Color Code" />
        </div>
        <div class="col-md-3">
            <input type="number" step="0.01" name="importanceScore" value="@currentScore" class="form-control" placeholder="Importance Score" />
        </div>
        <div class="col-md-3">
            <div class="btn-group" role="group">
                <button type="submit" class="btn btn-outline-primary">Search</button>
                <a asp-action="Search" class="btn btn-outline-secondary">Reset</a>
            </div>
        </div>
    </div>
</form>

@* Table *@
<table class="table table-bordered table-striped">
    <thead class="thead-dark">
        <tr>
            <th>@Html.DisplayNameFor(m => m.Items[0].Title)</th>
            <th>@Html.DisplayNameFor(m => m.Items[0].Note)</th>
            <th>@Html.DisplayNameFor(m => m.Items[0].ReminderDate)</th>
            <th>@Html.DisplayNameFor(m => m.Items[0].SentAt)</th>
            <th>@Html.DisplayNameFor(m => m.Items[0].IsSent)</th>
            <th>@Html.DisplayNameFor(m => m.Items[0].RepeatInterval)</th>
            <th>@Html.DisplayNameFor(m => m.Items[0].ImportanceScore)</th>
            <th>@Html.DisplayNameFor(m => m.Items[0].CreatedAt)</th>
            <th>@Html.DisplayNameFor(m => m.Items[0].UpdatedAt)</th>
            <th>@Html.DisplayName("Category Color Code")</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Items)
        {
            <tr>
                <td>@item.Title</td>
                <td>@item.Note</td>
                <td>@item.ReminderDate.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@(item.SentAt?.ToString("yyyy-MM-dd HH:mm") ?? "-")</td>
                <td>@(item.IsSent ? "Yes" : "No")</td>
                <td>@item.RepeatInterval</td>
                <td>@item.ImportanceScore</td>
                <td>@item.CreatedAt.Value.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@item.UpdatedAt.Value.ToString("yyyy-MM-dd HH:mm")</td>
                <td>@item.ReminderCategoryDuyVK?.ColorCode</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.MenstrualCycleReminderDuyVKid" class="btn btn-sm btn-warning">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.MenstrualCycleReminderDuyVKid" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@* Pagination *@
@if (Model.TotalPages > 1)
{
    <nav aria-label="Page navigation">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="Search"
                       asp-route-currentPage="@(Model.CurrentPage - 1)"
                       asp-route-pageSize="@Model.PageSize"
                       asp-route-title="@currentTitle"
                       asp-route-colorCode="@currentColor"
                       asp-route-importanceScore="@currentScore">Previous</a>
                </li>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-action="Search"
                       asp-route-currentPage="@i"
                       asp-route-pageSize="@Model.PageSize"
                       asp-route-title="@currentTitle"
                       asp-route-colorCode="@currentColor"
                       asp-route-importanceScore="@currentScore">@i</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="Search"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-pageSize="@Model.PageSize"
                       asp-route-title="@currentTitle"
                       asp-route-colorCode="@currentColor"
                       asp-route-importanceScore="@currentScore">Next</a>
                </li>
            }
        </ul>
    </nav>
}

