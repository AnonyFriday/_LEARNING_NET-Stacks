@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager Navigation

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData"
                                DefaultLayout="@typeof(MainLayout)">

                @* Not Authorize State *@
                <NotAuthorized>
                    @* Display a warning if the user isn’t authenticated *@
                    <LayoutView Layout="@typeof(EmptyLayout)">
                        <div class="alert alert-warning m-4">
                            <h4 class="alert-heading">Access Denied</h4>
                            <p>You must be logged in to view that page.</p>
                            <button class='btn btn-primary'
                                    @onclick='() => Navigation.NavigateTo("/Auths/Login")'>
                                Go to Login
                            </button>
                        </div>
                    </LayoutView>
                </NotAuthorized>

                @* Authorize State *@
                <Authorizing>
                    <LayoutView Layout="@typeof(MainLayout)">
                        <div class="m-4">Checking authorization…</div>
                    </LayoutView>
                </Authorizing>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there’s nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>
