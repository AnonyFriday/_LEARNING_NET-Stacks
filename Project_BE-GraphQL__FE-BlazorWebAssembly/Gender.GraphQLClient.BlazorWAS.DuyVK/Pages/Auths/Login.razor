@page "/Auths/Login"
@page "/"
@using Gender.GraphQLClient.BlazorWAS.DuyVK.Auth
@using Microsoft.AspNetCore.Components.Authorization

@inject Gender.GraphQLClient.BlazorWAS.DuyVK.GraphQLClients.AuthenticationGraphQLConsumercs AuthClient
@inject JwtAuthenticationStateProvider _jwtProvider
@inject NavigationManager _navigationProvider

<h3>Login</h3>

@* Login Form *@
<EditForm Model="credentials" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    @* Username *@
    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username"
                   class="form-control"
                   @bind-Value="credentials.UserName" />
    </div>

    @* Password *@
    <div class="form-group mt-2">
        <label for="password">Password</label>
        <InputText id="password"
                   type="password"
                   class="form-control"
                   @bind-Value="credentials.Password" />
    </div>

    <button type="submit" class="btn btn-primary mt-3">Log in</button>
</EditForm>

@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">@errorMessage</div>
}

@* Code Form *@

@code {

    private LoginRequest credentials = new LoginRequest();
    private string? errorMessage;

    private async Task HandleLogin()
    {
        errorMessage = null;

        if (string.IsNullOrEmpty(credentials.UserName) || string.IsNullOrEmpty(credentials.Password))
        {
            errorMessage = "Username and Password cannot be null";
        }

        try
        {
            // 1️. Call GraphQL login mutation
            var token = await AuthClient.LoginAsync(credentials);

            if (string.IsNullOrWhiteSpace(token))
            {
                errorMessage = "Invalid username or password.";
                return;
            }

            // 2️. Persist the token and notify Blazor
            await _jwtProvider.MarkUserAsAuthenticated(token);

            // 3️. Redirect to home (or protected) page
            _navigationProvider.NavigateTo("/MenstrualCycleReminderDuyVKs/MenstrualCycleReminderDuyVKList");
        }
        catch (Exception ex)
        {
            // Show any unexpected errors
            errorMessage = $"Login failed: {ex.Message}";
        }
    }
}
